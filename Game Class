package View;

import Content.JOP;

public class Game { 
// this class is the bulk of my coding where i use the position objects to form a 
//grid and keep track of the game.
	
	public static final int X = 1;
	public static final int O = 2;
	public static final int NONE = 0;
	
	public boolean gameover;
	public Position[][] board;
	
	public Game() {
		gameover = false;
		board = new Position[3][3];
		for(int r = 0; r < 3; r++) { 
			for(int c = 0; c < 3; c++) {
				Position obj = new Position();
				board[r][c] = obj;
			}
		}
		game();
	}
	
	
	public String printBoard() {
		String temp = "";
		temp += board[0][0].getSymbol() + " | " + board[0][1].getSymbol() + " | " + board[0][2].getSymbol() + "\n";
		temp += "----------" + "\n";
		temp += board[1][0].getSymbol() + " | " + board[1][1].getSymbol() + " | " + board[1][2].getSymbol() + "\n";
		temp += "----------" + "\n";
		temp += board[2][0].getSymbol() + " | " + board[2][1].getSymbol() + " | " + board[2][2].getSymbol() + "\n";
		
		return temp;
	}
	
	public void getRandomMove()
	{
		int counter = 0;
		for(int i = 0; i < 3; i++) {
			for(int r = 0; r < 3; r++) {
				if(!board[i][r].getUsed()) {counter++;}
			}
		}
		
		int RandomNumber = (int)(Math.random() * counter);
		int t = RandomNumber;
		for(int i = 0; i < 3; i++) {
			for(int r = 0; r < 3; r++) {
				if(!board[i][r].getUsed()) {
					t--;
					if(t == 0) {board[i][r].setSymbol(O);}
				}
			}
		}
	}
	
	public void PlayerMove()
	{
		boolean temp = true;
		while(temp) {
			String message = instructions() + printBoard() + "Please enter your move;";
			String move = JOP.in(message);
			if(Integer.parseInt(move) == 0 && !board[0][0].getUsed()) {board[0][0].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 1 && !board[0][1].getUsed()) {board[0][1].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 2 && !board[0][2].getUsed()) {board[0][2].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 3 && !board[1][0].getUsed()) {board[1][0].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 4 && !board[1][1].getUsed()) {board[1][1].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 5 && !board[1][2].getUsed()) {board[1][2].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 6 && !board[2][0].getUsed()) {board[2][0].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 7 && !board[2][1].getUsed()) {board[2][1].setSymbol(X); temp = false;}
			if(Integer.parseInt(move) == 8 && !board[2][2].getUsed()) {board[2][2].setSymbol(X); temp = false;}
		}
	}
	
	
	public String instructions()
	{
		String message = "You always go first. Type the number that you would like to go and click \" enter \"" + "\n"; 
		message += " 0  |  1  | 2 " + "\n"
			 + "--------------" + "\n"
			 + " 3  |  4  | 5 " + "\n"
			 + "--------------" + "\n"
			 + " 6  |  7  | 8" + "\n";
		message += "\n" + "\n";
		return message;
	}
	
	public void game() {
		while(gameover == false) {
			PlayerMove();
			checkWinner();
			if(gameover == false) {
				getRandomMove();
				checkWinner();
			}
		}
		JOP.msg(ending());
	}
	
	public void checkWinner() {
		
		if(board[0][0].getSymbol() == board[0][1].getSymbol() && board[0][0].getSymbol() == board[0][2].getSymbol() && board[0][2].getUsed()) {gameover = true;}
		else if(board[1][0].getSymbol() == board[1][1].getSymbol() && board[1][0].getSymbol() == board[1][2].getSymbol() && board[1][2].getUsed()) {gameover = true;}
		else if(board[2][0].getSymbol() == board[2][1].getSymbol() && board[2][0].getSymbol() == board[2][2].getSymbol() && board[2][2].getUsed()) {gameover = true;}
		else if(board[0][0].getSymbol() == board[1][0].getSymbol() && board[0][0].getSymbol() == board[2][0].getSymbol() && board[2][0].getUsed()) {gameover = true;}
		else if(board[0][1].getSymbol() == board[1][1].getSymbol() && board[0][1].getSymbol() == board[2][1].getSymbol() && board[2][1].getUsed()) {gameover = true;}
		else if(board[0][2].getSymbol() == board[1][2].getSymbol() && board[0][2].getSymbol() == board[2][2].getSymbol() && board[2][2].getUsed()) {gameover = true;}
		else if(board[0][0].getSymbol() == board[1][1].getSymbol() && board[0][0].getSymbol() == board[2][2].getSymbol() && board[2][2].getUsed()) {gameover = true;}
		else if(board[0][2].getSymbol() == board[1][1].getSymbol() && board[0][2].getSymbol() == board[2][0].getSymbol() && board[2][0].getUsed()) {gameover = true;}
	}
	
	public String ending() {
		return printBoard() + "Thank you for playing :)";
		
	}
}



